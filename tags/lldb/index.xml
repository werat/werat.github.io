<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lldb on Reboot and Shine</title><link>https://werat.dev/tags/lldb/</link><description>Recent content in lldb on Reboot and Shine</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 23 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://werat.dev/tags/lldb/index.xml" rel="self" type="application/rss+xml"/><item><title>Blazing fast expression evaluation for C++ in LLDB</title><link>https://werat.dev/blog/blazing-fast-expression-evaluation-for-c-in-lldb/</link><pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate><guid>https://werat.dev/blog/blazing-fast-expression-evaluation-for-c-in-lldb/</guid><description>Almost every modern debugger supports expression evaluation. It can be used directly by the user (e.g. by typing the expression in the debugger shell) or indirectly by IDEs and other programs via the debugger API. The expression evaluator can be implemented as an interpreter of the target language (that&amp;rsquo;s what GDB does for C++, for example) or by re-using the bits of the compiler infrastructure (LLDB uses Clang, C# debugger in Visual Studio uses Roslyn).</description></item><item><title>Debugging LLDB with source stepping</title><link>https://werat.dev/blog/debugging-lldb-with-source-stepping/</link><pubDate>Sun, 11 Oct 2020 18:35:00 +0100</pubDate><guid>https://werat.dev/blog/debugging-lldb-with-source-stepping/</guid><description>Sometimes you want to (or need to) debug a program that you didn&amp;rsquo;t build yourself and you don&amp;rsquo;t even know how exactly it was built. Depending on the specifics of your setup that could mean many different things:
Built on a build farm, running on a production server/container Installed via apt or similar, running locally &amp;hellip; This post is inspired by my experience of debugging LLDB. Debugging the debugger is always interesting and tricky, even without the additional difficulties like trying to get the source stepping to work :)</description></item></channel></rss>