<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on Reboot and Shine</title><link>https://werat.dev/tags/linux/</link><description>Recent content in linux on Reboot and Shine</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 26 Oct 2022 15:20:00 +0100</lastBuildDate><atom:link href="https://werat.dev/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Debugging Wine with LLDB and VSCode</title><link>https://werat.dev/blog/debugging-wine-with-lldb-and-vscode/</link><pubDate>Wed, 26 Oct 2022 15:20:00 +0100</pubDate><guid>https://werat.dev/blog/debugging-wine-with-lldb-and-vscode/</guid><description>In my previous post about Wine I mentioned working on a debugger that is capable of debugging both the Wine layer and the Windows application running with it. Time to share some details!
Debugging Wine applications is tricky and there are different ways to do it. In many cases you don&amp;rsquo;t have access to the application source code and/or debug symbols and Wine itself is often built with aggressive optimizations.</description></item><item><title>How Wine works 101</title><link>https://werat.dev/blog/how-wine-works-101/</link><pubDate>Mon, 10 Oct 2022 21:20:00 +0100</pubDate><guid>https://werat.dev/blog/how-wine-works-101/</guid><description>Wine is a compatibility layer capable of running Windows applications on several POSIX-compliant operating systems, such as Linux, macOS, &amp;amp; BSD (https://www.winehq.org).
If you have been using Linux for some time now, chances are you’ve used Wine at some point. Maybe to run that one very important Windows program that doesn’t have a Linux version or maybe to play World of Warcraft or some other game. Fun fact, Valve&amp;rsquo;s Steam Deck uses a Wine-based solution to run games (called Proton).</description></item></channel></rss>